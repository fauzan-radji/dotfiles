"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isRequestOrNotification(msg) {
    return msg.method !== undefined;
}
exports.isRequestOrNotification = isRequestOrNotification;
var ErrorObject;
(function (ErrorObject) {
    function create(obj) {
        return obj;
    }
    ErrorObject.create = create;
})(ErrorObject = exports.ErrorObject || (exports.ErrorObject = {}));
var ErrorCode;
(function (ErrorCode) {
    /**
     * Invalid JSON was received by the server.
     * An error occurred on the server while parsing the JSON text.
     */
    ErrorCode.parseError = -32700;
    /**
     * The JSON sent is not a valid Request object.
     */
    ErrorCode.invalidRequest = -32600;
    /**
     * The method does not exist/is not available.
     */
    ErrorCode.methodNotFound = -32601;
    /**
     * Invalid method parameter(s).
     */
    ErrorCode.invalidParams = -32602;
    /**
     * 	Internal JSON-RPC error.
     */
    ErrorCode.internalError = -32603;
    /**
     * implementation-defined server-errors.
     */
    function isServerError(code) {
        return -32099 <= code && code <= -32000;
    }
    ErrorCode.isServerError = isServerError;
    /**
     * implementation-defined server-errors.
     */
    function serverError(code) {
        if (!isServerError(code)) {
            throw new Error("Invalid range for a server error.");
        }
        return code;
    }
    ErrorCode.serverError = serverError;
    /**
     * Non-spec.
     */
    ErrorCode.unexpectedServerError = -32000;
    function isApplicationError(code) {
        // todo implement proper checks
        return true;
    }
    ErrorCode.isApplicationError = isApplicationError;
    function applicationError(code) {
        if (!isApplicationError(code)) {
            throw new Error("Invalid range for an application error.");
        }
        return code;
    }
    ErrorCode.applicationError = applicationError;
    /**
     * Non-spec.
     */
    ErrorCode.genericApplicationError = -320100;
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
//# sourceMappingURL=JsonRpcTypes.js.map