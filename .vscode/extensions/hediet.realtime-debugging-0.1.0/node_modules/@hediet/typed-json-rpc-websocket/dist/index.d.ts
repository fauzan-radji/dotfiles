/// <reference types="ws" />
import { Message, BaseMessageStream } from "@hediet/typed-json-rpc";
import WebSocket = require("isomorphic-ws");
export declare type NormalizedWebSocketOptions = {
    address: string;
};
export declare type WebSocketOptions = NormalizedWebSocketOptions | {
    host: string;
    port: number;
    forceTls?: boolean;
};
/**
 * Normalizes the given options to `NormalizedWebSocketOptions`.
 * It builds the address from a given host and port.
 */
export declare function normalizeWebSocketOptions(options: WebSocketOptions): NormalizedWebSocketOptions;
/**
 * Represents a stream through a web socket.
 * Use the static `connectTo` method to get a stream to a web socket server.
 */
export declare class WebSocketStream extends BaseMessageStream {
    private readonly socket;
    static connectTo(options: WebSocketOptions): Promise<WebSocketStream>;
    constructor(socket: WebSocket);
    /**
     * Closes the underlying socket.
     */
    close(): void;
    /**
     * Same as `close`.
     */
    dispose(): void;
    write(message: Message): Promise<void>;
    toString(): string;
}
//# sourceMappingURL=index.d.ts.map