import { Steps } from ".";
export interface StepState {
    id: string;
    state: {
        kind: "ran";
        result: unknown;
    } | {
        kind: "running";
    } | {
        kind: "notRun";
    } | {
        kind: "undone";
    } | {
        kind: "undoing";
    };
}
export declare class StepExecutionController {
    private lastRanStepIdx;
    private currentSteps;
    private stepStatesChangedEmitter;
    readonly onStepStatesChanged: import("@hediet/std/events").EventSource<StepState[], StepExecutionController>;
    getStepStates(): StepState[];
    applyNewSteps(steps: Steps): Promise<void>;
    moveTo(stepId: string): Promise<void>;
    private runAfter;
    private rewindBefore;
    private stepDataChanged;
    private compare;
}
//# sourceMappingURL=StepExecutionController.d.ts.map